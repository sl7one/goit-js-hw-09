{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,IAAKF,SAASC,cAAc,WAG1BE,EAAmB,EACnBC,EAAY,EA4BhB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCC,YAAW,WACTC,IACAlB,EAAAmB,OAAOC,QAAQ,mBAA8CC,OAA3BX,EAAW,EAAE,gBAAoBW,OAANV,G,GAC5DA,GAEHM,YAAW,WACTC,IACAlB,EAAAmB,OAAOG,QAAQ,kBAA6CD,OAA3BX,EAAW,EAAE,gBAAoBW,OAANV,G,GAC3DA,E,IAKT,SAASO,IAGP,IAFAV,GAAa,KAEKD,EAIhB,OAHAC,EAAY,EACZN,EAAKI,IAAIiB,UAAW,OACpBrB,EAAKI,IAAIkB,MAAMC,gBAAkB,oB,CAjDrCvB,EAAKC,KAAKuB,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAMC,iBACN,IAAMC,EAAYzB,SAAS0B,iBAAiB,SAE5C5B,EAAKI,IAAIiB,UAAW,EACpBrB,EAAKI,IAAIkB,MAAMC,gBAAkB,MAWjC,IATA,IAAMM,EAAS,CACbC,MAAOC,OAAOJ,EAAU,GAAGK,OAC3BvB,MAAOsB,OAAOJ,EAAU,GAAGK,OAC3BC,OAAQF,OAAOJ,EAAU,GAAGK,QAGxBE,EAAW,GACbzB,EAAQoB,EAAOC,MAEVK,EAAI,EAAGA,EAAIN,EAAOI,OAAQE,IACjCD,EAASE,KAAK7B,EAAc4B,EAAG1B,IAC/BA,GAASoB,EAAOpB,MAElBJ,EAAmB6B,EAASG,OAC5B3B,QAAQ4B,IAAIJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form'),\n  btn: document.querySelector('button'),\n};\n\nlet lastPromiseIndex = 0;\nlet promiseID = 0;\n\nrefs.form.addEventListener('submit', onFormClick);\n\nfunction onFormClick(event) {\n  event.preventDefault();\n  const inputRefs = document.querySelectorAll('input');\n\n  refs.btn.disabled = true;\n  refs.btn.style.backgroundColor = 'red';\n\n  const params = {\n    first: Number(inputRefs[0].value),\n    delay: Number(inputRefs[1].value),\n    amount: Number(inputRefs[2].value),\n  };\n\n  const promises = [];\n  let delay = params.first;\n\n  for (let i = 0; i < params.amount; i++) {\n    promises.push(createPromise(i, delay));\n    delay += params.delay;\n  }\n  lastPromiseIndex = promises.length;\n  Promise.all(promises);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        test();\n        Notify.success(`resolve position${position + 1}, with time ${delay}`);\n      }, delay);\n    } else {\n      setTimeout(() => {\n        test();\n        Notify.failure(`reject position${position + 1}, with time ${delay}`);\n      }, delay);\n    }\n  });\n}\n\nfunction test() {\n  promiseID += 1;\n  // console.log(promiseID, lastPromiseIndex);\n  if (promiseID === lastPromiseIndex) {\n    promiseID = 0;\n    refs.btn.disabled = !true;\n    refs.btn.style.backgroundColor = 'rgb(90, 189, 255)';\n    return;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","btn","$ce04d3a99e08e73b$var$lastPromiseIndex","$ce04d3a99e08e73b$var$promiseID","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","$ce04d3a99e08e73b$var$test","Notify","success","concat","failure","disabled","style","backgroundColor","addEventListener","event","preventDefault","inputRefs","querySelectorAll","params","first","Number","value","amount","promises","i","push","length","all"],"version":3,"file":"03-promises.8672d215.js.map"}